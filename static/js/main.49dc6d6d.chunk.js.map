{"version":3,"sources":["components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","src","width","height","alt","tex","String","raw","App","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6PAiBeA,G,YAdI,WAClB,OACC,yBAAKC,UAAU,cACd,yBAAKC,IAAG,wGAA2GC,MAAM,OAAOC,OAAO,KAAKC,IAAG,SAC/I,yBAAKJ,UAAU,iBACd,wBAAIA,UAAU,cACb,uBAAGA,UAAU,YAAb,iB,ykGCLL,IAAMK,EAAMC,OAAOC,IAAV,KAkEMC,MAhEf,WACE,OACE,yBAAKR,UAAU,UACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,WACb,8CAEF,yBAAKA,UAAU,WACb,uDAEF,4BAAKK,GACL,yGACA,4BAAKC,OAAOC,IAAZ,MACA,uBAAGP,UAAU,yCAAyCS,KAAK,SAA3D,kEACA,uBAAGT,UAAU,gBAAb,yCACA,yBAAKA,UAAU,QACb,wBAAIA,UAAU,SAAd,mBACA,wBAAIA,UAAU,gBAAd,qEACA,uBAAGA,UAAU,WAAb,YAAiCM,OAAOC,IAAxC,MACA,0CAAgBD,OAAOC,IAAvB,MACA,uBAAGP,UAAU,KAAb,YAA2BM,OAAOC,IAAlC,aAAuDD,OAAOC,IAA9D,oBAAyFD,OAAOC,IAAhG,aAAqHD,OAAOC,IAA5H,WAEF,yBAAKP,UAAU,QACb,wBAAIA,UAAU,SAAd,gCACA,wBAAIA,UAAU,gBAAd,gFAEA,uBAAGA,UAAU,WAAb,YAAiCM,OAAOC,IAAxC,MACA,uCAAaD,OAAOC,IAApB,yCAAmED,OAAOC,IAA1E,cAAgGD,OAAOC,IAAvG,8BAA6ID,OAAOC,IAApJ,MAEA,uBAAGP,UAAU,WAAb,gBAAqCM,OAAOC,IAA5C,MACA,uBAAGP,UAAU,KAAb,wFACA,2BAAIM,OAAOC,IAAX,aAA4BD,OAAOC,IAAnC,iCAA2ED,OAAOC,IAAlF,uBAAmHD,OAAOC,IAA1H,aAA2ID,OAAOC,IAAlJ,kCAA2LD,OAAOC,IAAlM,MACA,uBAAGP,UAAU,KAAb,UACA,uBAAGA,UAAU,IAAIM,OAAOC,IAAxB,MACA,uBAAGP,UAAU,IAAb,KAAmBM,OAAOC,IAA1B,MACA,uBAAGP,UAAU,OAGf,yBAAKA,UAAU,QACb,wBAAIA,UAAU,SAAd,gCACA,wBAAIA,UAAU,gBAAd,iDACA,uBAAGA,UAAU,WAAb,YAAiCM,OAAOC,IAAxC,MACA,+FACA,2BAAID,OAAOC,IAAX,MACA,uBAAGP,UAAU,KAAb,UACA,uBAAGA,UAAU,KAAKM,OAAOC,IAAzB,MACA,uBAAGP,UAAU,IAAb,SAAsB,oEAAtB,2CACA,uBAAGA,UAAU,KAAb,UACA,uBAAGA,UAAU,KAAKM,OAAOC,IAAzB,MACA,uBAAGP,UAAU,KAAKM,OAAOC,IAAzB,MACA,uBAAGP,UAAU,IAAb,SAAsB,uDAAtB,0BACA,uBAAGA,UAAU,KAAb,UACA,uBAAGA,UAAU,KAAKM,OAAOC,IAAzB,MACA,uBAAGP,UAAU,KAAKM,OAAOC,IAAzB,OAEF,6BACE,4BAAQP,UAAU,WAAlB,mBCnDUU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.49dc6d6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n\treturn(\r\n\t\t<div className='navigation'>\r\n\t\t\t<img src={`https://res.cloudinary.com/dbu3hvhtr/image/upload/v1571064414/InspireAcademy/IA_Color_Icon_fvnvwl.png`} width='auto' height='70' alt={`logo`} />\r\n\t\t\t<div className='black f3 menu'>\r\n\t\t\t\t<ul className='menu-items'>\r\n\t\t\t\t\t<p className='pointer '>Sign Out</p>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation';\n\nconst tex = String.raw`\\[a{x^2} + bx + c\\]`\n\nfunction App() {\n  return (\n    <div className=\"App tc\">\n      <Navigation />\n      <div className='w-100 notes w-90-ns br2'>\n        <div className='testing'>\n          <h1>Factorization</h1>\n        </div>\n        <div className='testing'>\n          <h3>{`Factorizing Trinomials`}</h3>\n        </div>\n        <h3>{tex}</h3>\n        <p>{`a, b and c are constants. To solve Trinomials, use the quadratic equation.`}</p>\n        <h3>{String.raw`\\[x = \\frac{{ - b \\pm \\sqrt {{b^2} - 4ac} }}{{2a}}\\]`}</h3>\n        <p className=\" br2 w-60-ns center alert alert-danger\" role=\"alert\">{`Note: The + and - signs indicates that there are two solutions`}</p>\n        <p className='f4 underline'>Summarized steps to solving equations</p>\n        <div className='step'>\n          <dt className=\"dib b\">1. Transposing:</dt>\n          <dd className=\"dib ml0 gray\">Every variable that moves across the equal sign changes it's sign</dd>\n          <p className='example'>Example: {String.raw`\\[{x^2} = 4x + 8\\]`}</p>\n          <p>Transposed: {String.raw`\\[{x^2} - 4x - 8 = 0\\]`}</p>\n          <p className='i'>Note how {String.raw`\\[ + 4x\\]`} and {String.raw`\\[ + 8\\]`} changed to {String.raw`\\[ - 4x\\]`} and {String.raw`\\[ - 8 \\]`} </p>\n        </div>\n        <div className='step'>\n          <dt className=\"dib b\">2. Multiplying out brackets:</dt>\n          <dd className=\"dib ml0 gray\">A variable outside the brackets multiplies all the variables in the bracktes</dd>\n\n          <p className='example'>Example: {String.raw`\\[x(x + 1)\\]`}</p>\n          <p>variable {String.raw`\\[ x \\]`} will multiply the two variables {String.raw`\\[ ( x \\]`}  and {String.raw`\\[ 1 ) \\]`} inside the brackets: {String.raw`\\[{x^2} + x\\]`}</p>\n      \n          <p className='example'>Example Two: {String.raw`\\[(x + 1)(x - 1)\\]`}</p>\n          <p className='i'>Each variable from one brackets must multiply every variable in the second brackets:</p>\n          <p>{String.raw`\\[x\\]`} and {String.raw`\\[ + 1\\]`} from the first brackets {String.raw`\\[(x + 1)\\]`} will multiply {String.raw`\\[x\\]`} and {String.raw`\\[ - 1\\]`} from the second brackets {String.raw`\\[(x - 1)\\]`}</p>\n          <p className='i'>Result</p>\n          <p className=''>{String.raw`\\[{x^2} - x + x - 1\\]`}</p>\n          <p className=''>= {String.raw`\\[{x^2} - 1\\]`}</p>\n          <p className='i'></p>\n        </div>\n\n        <div className='step'>\n          <dt className=\"dib b\">3. Simplifying square roots:</dt>\n          <dd className=\"dib ml0 gray\">A square root cancels a square and vice-versa</dd>\n          <p className='example'>Example: {String.raw`\\[\\sqrt {x + 1} \\; = \\;4x + 1\\]`}</p>\n          <p>1. Cancel the square root by squaring both sides of the equation</p>\n          <p>{String.raw`\\[{(\\sqrt {x + 1} )^2} = {(4x + 1)^2}\\]`}</p>\n          <p className='i'>Result</p>\n          <p className='i'>{String.raw`\\[x + 1 = (4x + 1)(4x + 1)\\]`}</p>\n          <p className=''>Apply <strong>step 2: Multiplying out brackets</strong> to the right hand side of the equation</p>\n          <p className='i'>Result</p>\n          <p className='i'>{String.raw`\\[x + 1 = 16{x^2} + 4x + 4x + 1\\]`}</p>\n          <p className='i'>{String.raw`\\[x + 1 = 16{x^2} + 8x + 1\\]`}</p>\n          <p className=''>Apply <strong>step 1: Transposing</strong> to the above equation</p>\n          <p className='i'>Result</p>\n          <p className='i'>{String.raw`\\[16{x^2} + 8x + 1 - x - 1\\]`}</p>\n          <p className='i'>{String.raw`\\[16{x^2} + 7x\\]`}</p>\n        </div>\n        <div>\n          <button className='pa3 br2'>Take a Quiz</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}